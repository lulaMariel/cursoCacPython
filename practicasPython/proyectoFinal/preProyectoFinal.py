# En esta preentrega, quise hacer los prints que se refieren a los datos ingresados por el usuario un poco m√°s c√≥micos, espero no ofender, solo fue para divertir un rato (para la entrega final, va a estar lo m√°s formal posibleüòÅ)
# Recomiendo probar todas las variaciones posibles, fui creativa

# Inicio del proyecto final

# Saludando al usuario

while True: # Incio el bucle para evitar que, si el usuario ingresa un tipo inv√°lido, el programa no se frene
    nombre = str(input("\nIngrese su nombre: ")) # Pide al usuario que ingrese su nombre

    if nombre == "": # Verifica que el nombre no quede vac√≠o
        print("Hola usuario fantasma, sin nombre no hay programa que funcione. Escriba su nombre por favor.")

    elif nombre.isdigit(): # El par√°metro isdigit() verifica que el nombre no contenga n√∫meros (aprendido por chatgpt)
        print("¬øSu nombre tiene n√∫meros? No se haga el chistoso, p√≥ngalo bien.")

    elif not nombre.isalpha(): # El par√°mtro isalpha() verifica que el nombre no contenga caracteres especiales (aprendido por chatgpt)
        print("No sab√≠a que se permit√≠an caracteres especiales en los nombres, de ser as√≠ me hubiera gustado que mi nombre sea $ol‚Ç¨d@d. Por favor, escriba bien su nombre, gracias.")

    else:
        print(f"\n¬°Hoy es mi d√≠a de suerte! ¬°¬°¬°Pusiste bien tu nombre!!! ¬°Hola {nombre}!") # Saluda al usuario
        break

# Iniciando proceso

productos = [] # Variable para almacenar los productos que ingrese el usuario

while True: # Iniciamos el bucle principal
    print("\n \tMen√∫ de opciones: ")
    print("1. Registro: Alta de productos nuevos")
    print("2. Visualizaci√≥n: Consulta de datos de productos")
    print("3. Actualizaci√≥n: Modificar la cantidad en stock de un producto")
    print("4. Eliminaci√≥n: Dar de baja alg√∫n producto")
    print("5. Listado: Listado completo de los productos")
    print("6. Reporte: Lista de productos con stock m√≠nimo")
    print("7. Salir")
    
    try: # Inicio el try para evitar que un error frene el programa
        
        opcion = int(input((f"\n{nombre}, por favor, ingrese una opci√≥n del men√∫ (1-7): "))) # Solicito al usuario que ingrese la opci√≥n que necesite usar

        if opcion == 7: # Me aseguro de que si elige el n√∫mero 7, genere los print de despido y se rompa el bucle

            print("\nYa que nos abandonas, no tenemos m√°s opci√≥n que decirte: Saliendo del sistema...") # Me despido del usuario
            print(f"A pesar de que te vayas... ¬°Te agradezco por usar nuestro sistema provisorio, {nombre}, vuelva pronto!") # Me despido del usuario
            break

        elif opcion == 1: # Inicio de la opci√≥n 1
            print("\nHa seleccionado 'Registro: Alta de prodcutos nuevos'") # Indico al usuario cu√°l fue la opci√≥n elegida

# 1. Solicitarle al usuario nombre del producto
            while True: # Inicio un nuevo bucle dentro de la opci√≥n 1 para asegurarme de que se puedan cargar m√∫ltiples productos
                while True: # Segundo bucle dentro de la opci√≥n 1 para asegurarme de que el nombre sea v√°lido

                    nombreProducto = str(input("\nIngrese el nombre del producto nuevo: ")) # Solicito al usuario el nombre del producto nuevo

                    if nombreProducto == "": # Verifica que el nombre del producto no quede vac√≠o 
                        print("¬øEn alg√∫n lugar del mundo fabrican productos y no les ponen un nombre? Por favor, no sea payaso y d√≠game que producto desea inrgesar.") # Aviso de que el dato ingresado no es v√°lido

                    elif nombreProducto.isdigit(): # El par√°metro isdigit() verifica que el nombre del producto nuevo no contenga n√∫meros (aprendido por chatgpt)
                        print("Est√° bien, existen productos que tienen n√∫meros en su nombre pero, ¬øsabe que son? MARCAS y yo ped√≠ producto. Ingrese un producto correcto.") # Aviso de que el dato ingresado no es v√°lido

                    elif not nombreProducto.isalpha(): # El par√°mtro isalpha() verifica que el nombre del producto nuevo no contenga caracteres especiales (aprendido por chatgpt)
                        print("Esta si no la vi nunca... ¬øCaracteres especiales en los nombres de producto? ¬øQui√©n permiti√≥ eso? D√≠gale que acepto la moci√≥n, pero mientras tanto... Escriba bien el nombre del producto, gracias.") # Aviso de que el dato ingresado no es v√°lido

                    else:
                        break # Sale del bucle si el nombre del producto nuevo es v√°lido

# 2. Solicitarle al usuario precio del producto 
                while True: # Tercer bucle dentro de la opci√≥n 1 para asegurarme de que el precio sea v√°lido

                    try: # Inicio el try para evitar que un error en la carga del precio del producto frene el programa

                        precio = float(input(f"\nIngrese el precio de '{nombreProducto}': $")) # Solicito al usuario el precio del producto nuevo

                        if precio <= 0: # Concicional para evitar que el precio cargado no sea inv√°lido

                            print("\n¬øEn qu√© lugar me dejan este producto gratis o me dan dinero a mi favor por llevarlo? ¬°Pero paseme la direcci√≥n que voy corriendo! No sea ingenuo e ingrese bien el precio, gracias.") # Si el precio es 0 o menor a 0, devuelve este print para avisarle al usuario y vuelve a solicitar el precio

                        else:
                            break # Sale del bucle si el precio es v√°lido

                    except ValueError:
                        print("\n¬øSe olvidaron de ponerle el precio en la g√≥ndola? Ingrese el precio por favor.") # Aviso de que el dato ingresado no es v√°lido

# 3. Solicitarle al usuario stock del producto
                while True: # Cuarto bucle dentro de la opci√≥n 1 para asegurarme de que el stock sea v√°lido
                    
                    try: # Incio el try para evitar que un error en la carga del stock del producto frene el prorgama

                        stock = int(input(f"\nIngrese el stock de '{nombreProducto}': ")) # Solicito al usuario el stock del producto nuevo

                        if stock <= 0: # Concicional para evitar que el stock cargado no sea inv√°lido

                            print("\nSi no tenes stock del producto, ¬øPara qu√© lo cargas en sistema exactamente? ¬°Ya d√≠game cu√°ntas unidades tiene del producto!") # Si el stock es 0 o menor a 0, devuelve este print para avisarle al usuario y vuelve a solicitar el stock
                        
                        else:
                            break # Sale del bucle si el stock es v√°lido
                    
                    except ValueError:
                        print("¬øAcaso usted puede tener 11,5 manzanas? Deber√≠a denunciarlo, creo que le robaron...") # Aviso de que el dato ingresado no es v√°lido
            
                # Agregar el producto completo a la lista
                productos.append((nombreProducto, precio, stock)) # Agrego el nombre del producto, su precio y su stock
                print(f"\n¬°Gracias al cielo! El producto '{nombreProducto}' fue agregado correctamente.") # Aviso de que el producto fue agregado con √©xito
                
                # Preguntar si desea agregar otro producto
                otroProducto = int(input("¬øDesea agregar otro producto? (1 para s√≠ o 2 para no): ")) # Le pido que indique 1 para agregar otro producto o 2 para cortar el ciclo
                if otroProducto != 1: # Condicional para verificar que el n√∫mero ingresado sea distinto de 1
                    break # Sale del bucle si el usuario no quiere agreagar otro producto
            
        elif opcion == 2: # Inicio de la opci√≥n 2
            
            print("\nHa seleccionado 'Visualizaci√≥n: Consulta de datos de productos'") # Indico al usuario cu√°l fue la opci√≥n elegida
                
            print("\n\t Listado de productos ingresados: ") # T√≠tulo del listado

            for producto in productos: # Bucle que recorre la lista para poder mostrarsela al usuario al finalizar el programa
                print(f"\nProducto: {producto[0]} \n\tPrecio: ${producto[1]} ; Stock: {producto[2]}") # Muestra los valores ingresados por producto en la opci√≥n 1, tomando los √≠ndices de cada solicitud (nombre del producto nuevo = √≠ndice 0, precio del producto = √≠ndice 1, stock de producto = √≠ndice 2)
        
        # elif opcion == 3: # Inicio de la opci√≥n 3
            
        #     print("\nHa seleccionado 'Actualizaci√≥n: Modicar la cantidad en stock de un producto'")
            
        # elif opcion == 4: # Inicio de la opci√≥n 4
            
        #     print("\nHa seleccionado 'Eliminaci√≥n: Dar de baja alg√∫n producto'")
            
        # elif opcion == 5: # Inicio de la opci√≥n 5
            
        #     print("\nHa seleccionado 'Listado completo de los productos'")
            
        # elif opcion == 6: # Inicio de la opci√≥n 6
            
        #     print("\nHa seleccionado 'Reporte: Lista de productos con stock m√≠nimo'")

    except ValueError:
        print("Error: Por favor, ingrese una opci√≥n que se encuentre en el men√∫ de opciones (1-7)")